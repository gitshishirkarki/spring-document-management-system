<!DOCTYPE html>
<html>
<head>
  <title>Folder and Document Hierarchy</title>
</head>
<body>
  <div id="folderHierarchy"></div>

  <script>
    // Function to recursively build the HTML structure
    function buildHierarchyHTML(items) {
      let html = '';

      items.forEach(item => {
        html += `
          <li>
            <strong>Folder/Document Name:</strong> ${item.name}<br>
            <strong>Path:</strong> ${item.path}<br>
            ${item.folders && item.folders.length > 0 ? '<strong>Folders:</strong>' : ''}
            <ul>
              ${item.folders ? buildHierarchyHTML(item.folders) : ''}
            </ul>
            ${item.documents && item.documents.length > 0 ? '<strong>Documents:</strong>' : ''}
            <ul>
              ${item.documents ? buildDocumentsHTML(item.documents) : ''}
            </ul>
          </li>
        `;
      });

      return html;
    }

    // Function to build the HTML for documents
    function buildDocumentsHTML(documents) {
      let html = '';

      documents.forEach(document => {
        html += `
          <li>
            <strong>Document Name:</strong> ${document.name}<br>
            <strong>Download URL:</strong> <a href="http://localhost:8080${document.url}">Download ${document.name}</a>
          </li>
        `;
      });

      return html;
    }

    // Get the target element to display the hierarchy
    const folderHierarchyElement = document.getElementById("folderHierarchy");

    // Fetch the JSON hierarchy from the API endpoint
    fetch("http://localhost:8080/folders/hierarchy")
      .then(response => response.json())
      .then(jsonHierarchy => {
        // Build and display the hierarchy HTML
        folderHierarchyElement.innerHTML = `
          <ul>
            ${buildHierarchyHTML(jsonHierarchy)}
          </ul>
        `;
      })
      .catch(error => {
        console.error("Error fetching hierarchy:", error);
      });
  </script>
</body>
</html>
